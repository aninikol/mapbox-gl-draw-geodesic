import createGeodesicLine from './create_geodesic_line.js';

const STEPS = 8;
const COORDINATES = [[-40, 37.5], [40, 37.5], [40, 30], [-40, -30], [-40, -37.5], [40, -37.5]];
const ANTIMERIDIAN_COORDINATES = COORDINATES.map((x) => [x[0] + 180, x[1]]);
const COORDINATES2 = [[50, 42.5], [50, -42.5], [-50, -42.5], [-50, 42.5], [50, 42.5]];
const ANTIMERIDIAN_COORDINATES2 = COORDINATES2.map((x) => [x[0] + 180, x[1]]);

describe('createGeodesicLine', () => {
  it('returns a line', () => {
    const expectedResult = [
      [-40, 37.5],
      [-29.640181847974322, 41.04294366518809],
      [-18.284925381704838, 43.56424149208077],
      [-6.187586058787172, 44.88054289444877],
      [6.187586058787172, 44.88054289444877],
      [18.28492538170483, 43.564241492080775],
      [29.640181847974315, 41.04294366518808],
      [40, 37.5],
      [40, 36.42857142857143],
      [40, 35.357142857142854],
      [40, 34.285714285714285],
      [40, 33.214285714285715],
      [40, 32.142857142857146],
      [40, 31.071428571428566],
      [40, 30],
      [27.167509670543375, 22.299081916471977],
      [15.748721276100815, 13.700764508258576],
      [5.159313901608258, 4.617798568750278],
      [-5.159313901608256, -4.617798568750275],
      [-15.7487212761008, -13.700764508258565],
      [-27.167509670543375, -22.299081916471977],
      [-40, -30],
      [-40, -31.071428571428566],
      [-40, -32.142857142857146],
      [-40, -33.214285714285715],
      [-40, -34.285714285714285],
      [-40, -35.357142857142854],
      [-40, -36.42857142857143],
      [-40, -37.5],
      [-29.640181847974322, -41.04294366518809],
      [-18.284925381704838, -43.56424149208077],
      [-6.187586058787172, -44.88054289444877],
      [6.187586058787172, -44.88054289444877],
      [18.28492538170483, -43.564241492080775],
      [29.640181847974315, -41.04294366518808],
      [40, -37.5]
    ];
    const result = createGeodesicLine(COORDINATES, STEPS);
    expect(result).toBeDeepCloseTo(expectedResult);
  });

  it('returns a line crossing antimeridian', () => {
    const expectedResult = [
      [140, 37.5],
      [150.3598181520257, 41.04294366518809],
      [161.71507461829515, 43.564241492080775],
      [173.8124139412128, 44.88054289444877],
      [180, 44.88054289444877],
      [186.18758605878716, 44.88054289444877],
      [198.28492538170482, 43.564241492080775],
      [209.6401818479743, 41.04294366518809],
      [220, 37.5],
      [220, 36.42857142857143],
      [220, 35.357142857142854],
      [220, 34.285714285714285],
      [220, 33.214285714285715],
      [220, 32.142857142857146],
      [220, 31.071428571428566],
      [220, 30],
      [207.16750967054335, 22.299081916471977],
      [195.74872127610078, 13.700764508258574],
      [185.15931390160824, 4.6177985687502785],
      [180, 1.4654943925052066e-14],
      [174.84068609839173, -4.617798568750274],
      [164.25127872389922, -13.700764508258567],
      [152.83249032945662, -22.299081916471977],
      [140, -30],
      [140, -31.071428571428566],
      [140, -32.142857142857146],
      [140, -33.214285714285715],
      [140, -34.285714285714285],
      [140, -35.357142857142854],
      [140, -36.42857142857143],
      [140, -37.5],
      [150.3598181520257, -41.04294366518809],
      [161.71507461829515, -43.564241492080775],
      [173.8124139412128, -44.88054289444877],
      [180, -44.88054289444877],
      [186.18758605878716, -44.88054289444877],
      [198.28492538170482, -43.564241492080775],
      [209.6401818479743, -41.04294366518809],
      [220, -37.5]
    ];
    const result = createGeodesicLine(ANTIMERIDIAN_COORDINATES, STEPS);
    expect(result).toBeDeepCloseTo(expectedResult);
  });
  it('returns a line', () => {
    const expectedResult = [
      [50, 42.5],
      [50, 30.357142857142858],
      [50, 18.214285714285708],
      [50, 6.071428571428576],
      [50, -6.071428571428571],
      [50, -18.214285714285705],
      [50, -30.357142857142858],
      [50, -42.5],
      [38.51500296240567, -48.12306182163198],
      [24.61000064951651, -52.34744377816024],
      [8.512108836214836, -54.65219948187882],
      [-8.512108836214829, -54.65219948187882],
      [-24.610000649516508, -52.34744377816025],
      [-38.51500296240567, -48.12306182163198],
      [-50, -42.5],
      [-50, -30.357142857142858],
      [-50, -18.214285714285708],
      [-50, -6.071428571428576],
      [-50, 6.071428571428571],
      [-50, 18.214285714285705],
      [-50, 30.357142857142858],
      [-50, 42.5],
      [-38.51500296240567, 48.12306182163198],
      [-24.61000064951651, 52.34744377816024],
      [-8.512108836214836, 54.65219948187882],
      [8.512108836214829, 54.65219948187882],
      [24.610000649516508, 52.34744377816025],
      [38.51500296240567, 48.12306182163198],
      [50, 42.5]
    ];
    const result = createGeodesicLine(COORDINATES2, STEPS);
    expect(result).toBeDeepCloseTo(expectedResult);
  });

  it('returns a line crossing antimeridian', () => {
    const expectedResult = [
      [-130, 42.5],
      [-130, 30.357142857142858],
      [-130, 18.214285714285708],
      [-130, 6.071428571428576],
      [-130, -6.071428571428571],
      [-130, -18.214285714285708],
      [-130, -30.35714285714285],
      [-130, -42.5],
      [-141.48499703759435, -48.12306182163198],
      [-155.3899993504835, -52.34744377816024],
      [-171.48789116378518, -54.65219948187882],
      [-180, -54.65219948187882],
      [-188.51210883621482, -54.65219948187882],
      [-204.61000064951648, -52.34744377816025],
      [-218.51500296240565, -48.12306182163198],
      [-230, -42.5],
      [-230, -30.357142857142858],
      [-230, -18.214285714285708],
      [-230, -6.071428571428576],
      [-230, 6.071428571428571],
      [-230, 18.214285714285705],
      [-230, 30.357142857142858],
      [-230, 42.5],
      [-218.51500296240567, 48.12306182163198],
      [-204.6100006495165, 52.34744377816024],
      [-188.51210883621482, 54.65219948187882],
      [-180, 54.65219948187882],
      [-171.48789116378518, 54.65219948187882],
      [-155.38999935048352, 52.34744377816024],
      [-141.48499703759435, 48.12306182163198],
      [-130, 42.5]
    ];
    const result = createGeodesicLine(ANTIMERIDIAN_COORDINATES2, STEPS);
    expect(result).toBeDeepCloseTo(expectedResult);
  });
});